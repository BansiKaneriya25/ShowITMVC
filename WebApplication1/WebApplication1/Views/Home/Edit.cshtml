@using WebApplication1.Models
@model Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<h5>@ViewBag.ShowITLecture</h5>
<h5>@ViewData["ShowITLive"]</h5>
<h5>@TempData["nameData"]</h5>

@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { id = "frmEdit", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.StudentId)

    @*@Html.TextBox("StudentName")*@
    @Html.Label("StudentName:")
    @Html.TextBoxFor(model => model.StudentName)
    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })

    @*@Html.Label("StudentName:") @Html.TextAreaFor(model => model.StudentName)*@
    @Html.Label("Age:") @Html.TextBoxFor(model => model.Age)
    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })

    @Html.Label("IsActive:") @Html.CheckBoxFor(model => model.IsActive)

    @Html.Label("Male:") @Html.RadioButtonFor(model => model.Gender, "Male")
    @Html.Label("Female:") @Html.RadioButtonFor(model => model.Gender, "Female")

    @Html.Label("Gender:") @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(Gender))), "--Select Gender--")

    @Html.PasswordFor(model => model.Password)

    @*@Html.DisplayFor(model => model.StudentName)
        @Html.LabelFor(model => model.StudentName)

        @Html.EditorFor(model => model.StudentName)*@
    @Html.EditorFor(model => model.Age)
    @Html.EditorFor(model => model.IsActive)
    @Html.EditorFor(model => model.DOB)
    @Html.EditorFor(model => model.Money)

    if (ViewBag.FileShow == true)
    {
        @Html.TextBoxFor(m => m.File, new { type = "file" })
    }

    @Html.TextBoxFor(model => model.TestName)
    <input type="submit" value="Save" class="btn btn-default" />
}

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <h4>Student</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.(model => model.StudentId)

            <div class="form-group">
                @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
